version: '3'

x-backend-defaults: &backend-common
  image: dallyger/themenschaedel-backend:nightly
  restart: unless-stopped
  depends_on:
    - database
    - redis
  environment: &backend-env
    APP_KEY: "${BACKEND_APP_KEY}"
    APP_DEBUG: "false"
    CACHE_DRIVER: "redis"
    DB_HOST: "database"
    DB_DATABASE: "${BACKEND_DB_DATABASE:-themenschaedel}"
    DB_USERNAME: "${BACKEND_DB_USERNAME:-themenschaedel}"
    DB_PASSWORD: "${BACKEND_DB_PASSWORD}"
    MAIL_MAILER: "smtp"
    MAIL_HOST: "$MAIL_HOST"
    MAIL_PORT: "${MAIL_PORT:-587}"
    MAIL_USERNAME: "$MAIL_USERNAME"
    MAIL_PASSWORD: "$MAIL_PASSWORD"
    MAIL_ENCRYPTION: "tls"
    MAIL_FROM_ADDRESS: "$MAIL_FROM"
    MAIL_FROM_NAME: "${MAIL_FROM_NAME:-}"
    MEILISEARCH_HOST: search:7700
    MEILISEARCH_KEY: "${MEILI_MASTER_KEY:-}"
    PODCAST_RSS_FEED: "$BACKEND_PODCAST_RSS_FEED"
    REDIS_HOST: "redis"
    SESSION_DRIVER: "redis"
  networks:
    - backend

services:
  app:
    container_name: schaedel_backend_web
    <<: *backend-common
    environment:
      <<: *backend-env
      APP_URL: "https://${HTTP_BASE_DOMAIN:-localhost}"
      SANCTUM_STATEFUL_DOMAINS: "${HTTP_BASE_DOMAIN:-localhost}"
      SESSION_DOMAIN: ".${HTTP_BASE_DOMAIN:-localhost}"
      TRUSTED_PROXIES: "${HTTP_TRUSTED_PROXY_URL}"
    labels:
      - traefik.enable=true
      - traefik.docker.network=reverse-proxy
      - traefik.http.services.backend.loadbalancer.server.port=8080

      - traefik.http.routers.account.rule=Host(`account.${HTTP_BASE_DOMAIN:-localhost}`)
      - traefik.http.routers.account.tls.certresolver=cloudflare
      - traefik.http.routers.account.entrypoints=https

      - traefik.http.routers.backend.rule=Host(`api.${HTTP_BASE_DOMAIN:-localhost}`)
      - traefik.http.routers.backend.tls.certresolver=cloudflare
      - traefik.http.routers.backend.entrypoints=https
    networks:
      - backend
      - reverse-proxy

  scheduler:
    container_name: schaedel_backend_scheduler
    <<: *backend-common
    depends_on:
      - app
    entrypoint: start scheduler

  worker:
    container_name: schaedel_backend_worker
    <<: *backend-common
    depends_on:
      - app
    entrypoint: start worker

  database:
    container_name: schaedel_backend_db
    image: mysql:8.0
    #ports:
    #  - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${BACKEND_DB_PASSWORD}'
      MYSQL_DATABASE: '${BACKEND_DB_DATABASE:-themenschaedel}'
      MYSQL_USER: '${BACKEND_DB_USERNAME:-themenschaedel}'
      MYSQL_PASSWORD: '${BACKEND_DB_PASSWORD}'
    volumes:
      - database:/var/lib/mysql
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping" ]

  redis:
    container_name: schaedel_backend_redis
    image: redis:alpine
    volumes:
      - redis:/data
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  search:
    container_name: schaedel_backend_search
    image: getmeili/meilisearch:latest
    volumes:
      - search:/data.ms
    networks:
      - backend
    restart: unless-stopped

networks:
  backend:
  reverse-proxy:
    external: true

volumes:
  database:
    driver: local
  redis:
    driver: local
  search:
    driver: local
